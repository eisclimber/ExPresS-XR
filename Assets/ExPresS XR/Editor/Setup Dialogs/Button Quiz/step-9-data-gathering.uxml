<ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:uie="UnityEditor.UIElements" editor-extension-mode="False">
    <ui:VisualElement name="step-9-data-gathering" style="flex-grow: 1;">
        <ui:Label text="(Optional) Data Gathering" display-tooltip-when-elided="true" name="step-9" style="flex-direction: row; flex-grow: 0; height: auto; font-size: 20px; -unity-text-align: upper-center; flex-shrink: 1; -unity-font-style: bold; padding-left: 0; padding-right: 0; padding-bottom: 4px;" />
        <ui:Label text="If you are planning to evaluate the choices and other information about this quiz you will probably want to save and export the data. As for this example a timestamp and all information from the quiz will be logged. \n\n- Create an Data Gatherer by right-clicking in the hierarchy and selecting &apos;ExPresS XR &gt; Data Gatherer&apos;. \n- Select the export Option &apos;Local&apos; and enter &apos;Data/ButtonQuiz.csv&apos;. \n- Set &apos;Include Timestamp&apos; and add a new Data Binding by pressing &apos;+&apos;. \n- Drag the ButtonQuiz-GameObject into the &apos;Target Object&apos; field, then select &apos;ButtonQuiz/string GetFullQuizCsvValues()&apos; to export all information about the quiz. This will automatically add the correct Export Column Name for the values. \n- Go to the ButtonQuiz-GameObject and connect the &apos;OnAnswerGiven&apos;-Event with the DataGatherer&apos;s &apos;exportNewCSVLine()&apos;-function. This will export the values every time an answer was given. \n\nIf you only want individual values you can create a separate DataBinding and specify a Export Column Name for each." display-tooltip-when-elided="true" name="choice-description" style="flex-grow: 1; display: flex; flex-wrap: nowrap; white-space: normal;" />
        <ui:Button text="Create Data Gatherer" display-tooltip-when-elided="true" name="create-data-gatherer-button" style="margin-top: 10px; margin-bottom: 10px; width: auto; margin-left: 20px; margin-right: 20px;" />
    </ui:VisualElement>
    <ui:VisualElement name="controls-view" style="flex-direction: row; justify-content: flex-end;">
        <ui:Button text="Back" display-tooltip-when-elided="true" name="back-button" />
        <ui:Button text="Finish" display-tooltip-when-elided="true" name="finish-button" />
    </ui:VisualElement>
</ui:UXML>
