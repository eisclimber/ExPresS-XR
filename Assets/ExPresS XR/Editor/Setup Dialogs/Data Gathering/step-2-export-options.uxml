<ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:uie="UnityEditor.UIElements" editor-extension-mode="False">
    <ui:VisualElement name="step-2-export-options" style="flex-grow: 1;">
        <ui:Label text="Export Options..." display-tooltip-when-elided="true" name="step-header" style="flex-direction: row; flex-grow: 0; height: auto; font-size: 20px; -unity-text-align: upper-center; flex-shrink: 1; -unity-font-style: bold; padding-left: 0; padding-right: 0; padding-bottom: 4px;" />
        <ui:Label text="The Data Gatherer supports exports to the local filesystem and HTTP Posts.  &#10;Depending on the selection input field for the local and/or http path will be shown, allowing the input of the paths.&#10;&#10;If the local filepath does not end with one of the following file extensions `.txt`, `.log` or `.csv`, the extension `.csv` will be added as per default. When used in editor the file will be saved at the specified path relative to the project location. Using the built version, the values will usually be stored in a subfolder of the AppData-Folder to ensure writing privilege. To open it hit Windows-Key + R, then enter `%APPDATA%` and locate the folder named after the application.&#10;For separating values from different sessions, the option `newExportFilePerPlaythrough` will create a new csv file for each playthrough. For each file a timestamp of the start of the session is added to the name.&#10;&#10;The default `separatorType` is &quot;Semicolon&quot; as to reduce columns added from the exported strings. &#10;It is advised to enable `escapeColumn` to surround any columns containing the separator character (but also the escape character) with double-quotes (&quot;).  &#10;Since using `Semicolon`s is also not guaranteed to be safe, it is advised to always keep it the `escapeColumn` enabled, unless your table-editor does not support it." display-tooltip-when-elided="true" name="step-description" style="flex-grow: 1; white-space: normal;" />
    </ui:VisualElement>
    <ui:VisualElement name="controls-view" style="flex-direction: row; justify-content: flex-end;">
        <ui:Button text="Back" display-tooltip-when-elided="true" name="back-button" />
        <ui:Button text="Next" display-tooltip-when-elided="true" name="next-button" />
    </ui:VisualElement>
</ui:UXML>
