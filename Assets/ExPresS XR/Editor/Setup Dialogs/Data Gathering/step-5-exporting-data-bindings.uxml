<ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:uie="UnityEditor.UIElements" editor-extension-mode="False">
    <ui:VisualElement name="step-5-exporting-data-bindings" style="flex-grow: 1;">
        <ui:Label text="Exporting Data bindings" display-tooltip-when-elided="true" name="step-header" style="flex-direction: row; flex-grow: 0; height: auto; font-size: 20px; -unity-text-align: upper-center; flex-shrink: 1; -unity-font-style: bold;" />
        <ui:Label text="Adding new columns to be exported is handled via Drag&amp;Drop similar to Unity&apos;s Event System: When **+**-Button in the editor for the `dataBindings`-array a new entry is generated where a column name and a GameObject can be specified. Once a GameObject is given a public non-void method or public member can be be set. This value will be read /method will be called every time a new CSV-line is exported.  Some special values of the `TutorialButtonQuiz` return multiple values. Selecting these values will automatically add all the correct column names.  Please note that only primitive, positional values (Position, Rotation) and Strings can be exported here. Should other values be exported a function converting a value into a string can be created for that purpose. This also applies for value from static fields that do not have a GameObject associated with them (e.g. `Application.version`).  ```C# class ExportWrapperClass {     public static string getApplicationVersion() =&gt; Application.version;      // Assuming myObject is defined and has a function &quot;getExportValue()&quot;     public static string getMyObjectExportValue() =&gt; myObject.getExportValue(); } ```" display-tooltip-when-elided="true" name="step-description" style="flex-grow: 1; white-space: normal;" />
    </ui:VisualElement>
    <ui:VisualElement name="controls-view" style="flex-direction: row; justify-content: flex-end;">
        <ui:Button text="Back" display-tooltip-when-elided="true" name="back-button" />
        <ui:Button text="Next" display-tooltip-when-elided="true" name="next-button" />
    </ui:VisualElement>
</ui:UXML>
