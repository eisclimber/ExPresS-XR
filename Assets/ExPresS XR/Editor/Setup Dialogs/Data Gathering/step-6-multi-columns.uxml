<ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:uie="UnityEditor.UIElements" editor-extension-mode="False">
    <ui:VisualElement name="step-6-multi-columns" style="flex-grow: 1;">
        <ui:Label text="Exporting Multiple Columns..." display-tooltip-when-elided="true" name="step-header" style="flex-direction: row; flex-grow: 0; height: auto; font-size: 20px; -unity-text-align: upper-center; flex-shrink: 1; -unity-font-style: bold; padding-left: 0; padding-right: 0; padding-bottom: 4px;" />
        <ui:Label text="The DataGatherer supports a system for exporting multiple columns at once. It is based on Attributes, the same system that is used for defining SerializeProperty by adding `[SerializeProperty]` in front of a function.  &#10;&#10;Multi-Column support provides three Attributes:&#10;&#10;- MultiColumnValueAttribute: Marks an entry as multi column. As the the value will not be escaped even though it does contain the `columnSeparator`. The proper escaping of the individual columns must be done by the developer.&#10;&#10;- HeaderReplacementAttribute: Automatically replaces the `exportColumnName` of the binding with the list of passed strings (See example below). Each string will be separated using the correct `columnSeparator`.  &#10;&#10;- HeaderReplacementNoticeAttribute: Will be printed when selecting this function to be exported. Can be used to convey information about the provided values." display-tooltip-when-elided="true" name="step-description" style="flex-grow: 1; white-space: normal; -unity-font-style: normal;" />
        <ui:VisualElement name="example-code">
            <ui:Label text="Example  Code:" display-tooltip-when-elided="true" name="example-label" style="flex-grow: 1; flex-direction: column-reverse;" />
            <ui:Label text="[MultiColumnValueAttribute]&#10;[HeaderReplacementAttribute(&quot;h1&quot;, &quot;h2&quot;, &quot;h3&quot;)]&#10;[HeaderReplacementNoticeAttribute(&quot;Careful! This function exports multiple lines!&quot;)]&#10;public string GetMultiColumnWithHeaderReplacement()  =&gt; &quot;v1,v2,v3\nv4,v5,v6&quot;;" display-tooltip-when-elided="true" name="code-field" style="margin-left: 8px; margin-right: 8px; margin-top: 8px; margin-bottom: 8px; background-color: rgb(41, 41, 41); border-left-color: rgb(47, 47, 47); border-right-color: rgb(47, 47, 47); border-top-color: rgb(47, 47, 47); border-bottom-color: rgb(47, 47, 47); border-left-width: 2px; border-right-width: 2px; border-top-width: 2px; border-bottom-width: 2px; border-top-left-radius: 2px; border-bottom-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; padding-left: 8px; padding-right: 4px; padding-top: 4px; padding-bottom: 4px;" />
        </ui:VisualElement>
    </ui:VisualElement>
    <ui:VisualElement name="controls-view" style="flex-direction: row; justify-content: flex-end;">
        <ui:Button text="Back" display-tooltip-when-elided="true" name="back-button" />
        <ui:Button text="Next" display-tooltip-when-elided="true" name="next-button" />
    </ui:VisualElement>
</ui:UXML>
