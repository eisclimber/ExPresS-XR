<ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:uie="UnityEditor.UIElements" editor-extension-mode="False">
    <ui:VisualElement name="step-3-cutouts" style="flex-grow: 1;">
        <ui:Label text="Filling the ExhibitionDisplay - Image..." display-tooltip-when-elided="true" name="step-header" style="flex-direction: row; flex-grow: 0; height: auto; font-size: 20px; -unity-text-align: upper-center; flex-shrink: 1; -unity-font-style: bold;" />
        <ui:Label text="- The process is similar to the [Object-Display](#Filling-the-ExhibitionDisplay-Object) with only a few alterations to the prefab and some settings. - Add the Sunflower at &quot;Assets/ExPresS XR/Tutorial Assets/Room/Sunflower Display Image.prefab&quot; to the the Display&apos;s &quot;Displayed Prefab&quot;-Slot. If you want to create your own create a new **Empty GameObject** and add a WorldSpace Canvas to it via &quot;ExPresS XR/UI/WorldSpaceCanvas&quot;. Remove the `Graphic Raycaster` and `Tracked Device Graphic Raycaster`-Components from the Canvas and add an `UI/Image` as child. Set the Canvas size to fit the Display&apos;s &quot;Frame&quot;. It&apos;s size can be found at the BaseMesh-Child&apos;s &quot;ProBuilder MeshFilter&quot;&apos;s &quot;Object Size&quot;-Property and has a factor of 100 towards the Canvas size. Set the image&apos;s Anchor Preset so cover the whole Canvas and give the image a Sprite to display. As you probably won&apos;t pick up the image you do not need a `XRGrabInteractor`-Component. - Enter a Label Text and an Info Text. For the sunflower they are      ```Text     Sunflower     ```      and      ```Text     Pixelart of a Sunflower.     ```      respectively.  - Finally be sure to **disable** &quot;Spin Object&quot;." display-tooltip-when-elided="true" name="step-description" style="flex-grow: 1; white-space: normal;" />
    </ui:VisualElement>
    <ui:VisualElement name="controls-view" style="flex-direction: row; justify-content: flex-end;">
        <ui:Button text="Back" display-tooltip-when-elided="true" name="back-button" />
        <ui:Button text="Finish" display-tooltip-when-elided="true" name="finish-button" />
    </ui:VisualElement>
</ui:UXML>
