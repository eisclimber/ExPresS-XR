<ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:uie="UnityEditor.UIElements" editor-extension-mode="False">
    <ui:VisualElement name="step-3-cutouts" style="flex-grow: 1;">
        <ui:Label text="Add Data Gatherer..." display-tooltip-when-elided="true" name="step-header" style="flex-direction: row; flex-grow: 0; height: auto; font-size: 20px; -unity-text-align: upper-center; flex-shrink: 1; -unity-font-style: bold;" />
        <ui:Label text="- Add a `DataGatherer` via the GameObject-Menu &quot;ExPresS XR/Data Gatherer&quot;. - Select `Local` as the `Data Export Type` and change the `Local Export Path` if desired. - As we want to export value after each answer we won&apos;t need to set Input Action Triggers or setup a periodic Export in the DataGatherer.     Instead select the `Button Quiz` and connect the `OnAnswerGiven`-Event with the `DataGatherer`&apos;s function `ExportNewCsvLine()`.     This will create export a value every time an answer was given. - What is left is choosing the data to be exported. As an example two sets of values will be exported: The position of the head using the value of an `InputAction` and all information about the quiz by calling a function using `DataGatheringBindings`:    - While inspecting the `DataGatherer` add a new entry to the `Input Action Data Bindings` by pressing the &quot;+&quot;.    Select the Input Action with name &quot;XRI Head/Position&quot; by pressing the circle with a dot and searching it in the list that pops up.    The value will automatically be exported as it&apos;s string representation and the column name will be derived from the name of the input action.   - While inspecting the `DataGatherer` add a new entry to the `Data Bindings` by pressing the &quot;+&quot;.     Drag the `Button Quiz` into the `Target Object`-Slot. Then select &quot;Button Quiz &gt; string GetFullCSVValues&quot; from the now enabled &quot;Value To Save&quot;-Dropdown.     Choosing this function will automatically fill in a value for the `exportColumnName` as it returns values for multiple column at once as described in the Data Gatherer Documentation." display-tooltip-when-elided="true" name="step-description" style="flex-grow: 1; white-space: normal;" />
    </ui:VisualElement>
    <ui:VisualElement name="controls-view" style="flex-direction: row; justify-content: flex-end;">
        <ui:Button text="Back" display-tooltip-when-elided="true" name="back-button" />
        <ui:Button text="Finish" display-tooltip-when-elided="true" name="finish-button" />
    </ui:VisualElement>
</ui:UXML>
